name: Loom.AI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Format with black
      run: |
        black --check .
    
    - name: Test with pytest
      run: |
        pytest tests/

  build-and-deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Build and push Docker image
      env:
        REGISTRY: gcr.io
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        IMAGE_NAME: loom-ai
      run: |
        gcloud auth configure-docker
        docker build -t $REGISTRY/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA .
        docker push $REGISTRY/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA
        docker tag $REGISTRY/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA $REGISTRY/$PROJECT_ID/$IMAGE_NAME:latest
        docker push $REGISTRY/$PROJECT_ID/$IMAGE_NAME:latest
    
    - name: Deploy to Cloud Run
      env:
        REGISTRY: gcr.io
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        IMAGE_NAME: loom-ai
        REGION: us-central1
        SERVICE_NAME: loom-ai-api
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGISTRY/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --set-env-vars "ENVIRONMENT=production" 